# -----------------------------------------------------------------------------
#
#   REMINDER: If you edit this file, you'll most likely also want to edit
#   circle.yml in the client repository!
#
# -----------------------------------------------------------------------------
version: 2
jobs:
  build:
    working_directory: ~/kbfs
    parallelism: 1
    shell: /bin/bash --login
    environment:
      GOVERSION: 1.10.3

      # Some node dependencies break without this.
      CXX: g++-4.8

    # TODO: Consider picking a better docker image.
    #
    # For more information on choosing an image (or alternatively
    # using a VM instead of a container) see
    # https://circleci.com/docs/2.0/executor-types/ To see the list of
    # pre-built images that CircleCI provides for most common
    # languages see https://circleci.com/docs/2.0/circleci-images/
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init

    steps:
    - run:
        name: Update PATH and Define Environment Variable at Runtime
        command: |
          echo 'export GOPATH=$HOME/go-path' >> $BASH_ENV
          echo 'export PATH=$HOME/.yarn/bin:$GOROOT/bin:$PATH' >> $BASH_ENV

          # Some node dependencies break without this.
          echo 'export ANDROID_NDK=$ANDROID_HOME/ndk-bundle' >> $BASH_ENV
          echo 'export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle' >> $BASH_ENV

          source $BASH_ENV

    - checkout

    # Install node and java.
    - run: nvm install 10 && nvm alias default 10
    - run: sudo update-alternatives --set java /usr/lib/jvm/jdk1.8.0/bin/java; sudo update-alternatives --set javac /usr/lib/jvm/jdk1.8.0/bin/javac; echo -e "export JAVA_HOME=/usr/lib/jvm/jdk1.8.0" >> $BASH_ENV

    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1-dep-

    # - run: nvm ls-remote
    - run: sudo apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg
    - run: echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    - run: sudo apt-get update -qq
    # - run: sudo apt-cache show yarn
    - run: sudo apt-get install -y -qq yarn=1.0.2-1
    - run: sudo rm -rf /usr/local/go*
    - run: mkdir -p ~/downloads ~/go-path
    - run: ls "$HOME/downloads"
    - run: ls "$ANDROID_HOME"

    - run: if [[ ! -e "$HOME/downloads/go.$GOVERSION.tar.gz" ]]; then wget -nv https://storage.googleapis.com/golang/go$GOVERSION.linux-amd64.tar.gz -O $HOME/downloads/go.$GOVERSION.tar.gz ; fi
    - run: cd $HOME && tar -xzvf downloads/go.$GOVERSION.tar.gz
    - run: sudo mv $HOME/go /usr/local

    - run: if ! $(grep -q "Revision=24.4.1" $ANDROID_HOME/tools/source.properties); then echo y | android update sdk -u -a -t "tools"; fi
    - run: if [ ! -e $ANDROID_HOME/build-tools/23.0.2 ]; then echo y | android update sdk -u -a -t "build-tools-23.0.2"; fi

    # Android Support Repository, revision 35 / Local Maven repository for Support Libraries
    - run: if [ ! -d "/usr/local/android-sdk-linux/extras/android/m2repository/com/android/support/design/24.1.0" ]; then echo y | android update sdk --no-ui --all --filter "extra-android-m2repository"; fi

    # Accept android licenses
    - run: mkdir -p /usr/local/android-sdk-linux/licenses
    - run: if [[ ! -e "$ANDROID_HOME/ndk-bundle" ]]; then wget -nv http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip -O android-ndk-r11c-linux-x86_64.zip && unzip -o android-ndk-r11c-linux-x86_64.zip -d "$ANDROID_HOME" && mv "$ANDROID_HOME/android-ndk-r11c" "$ANDROID_HOME/ndk-bundle"; fi
    - run: echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > /usr/local/android-sdk-linux/licenses/android-sdk-license
    - run: echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> /usr/local/android-sdk-linux/licenses/android-sdk-license

    # Clone client and install Yarn
    - run: mkdir -p $GOPATH/src/github.com/keybase
    - run: git clone https://github.com/keybase/client.git $HOME/client
    - run: ln -s $HOME/client $GOPwATH/src/github.com/keybase/client
    - run:
        working_directory: ../client/shared
        command: yarn install --pure-lockfile --ignore-engines --prefer-offline
    - run:
        working_directory: ../client/shared
        command: yarn global add react-native-cli

    - run: ln -s $HOME/kbfs $GOPATH/src/github.com/keybase/kbfs
    - run:
        working_directory: ../client/shared
        environment:
          LOCAL_KBFS: 1
        command: yarn run rn-gobuild-android

    - run: ls -la $GOPATH/src/github.com/keybase/client/shared/react-native/android/keybaselib/keybaselib.aar

    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/downloads
        - ~/.cache/yarn
        - /tmp/go-android/bin
        - /tmp/go-android/pkg
        - /usr/local/android-sdk-linux/tools
        - /usr/local/android-sdk-linux/ndk-bundle
        - /usr/local/android-sdk-linux/build-tools/23.0.2
        - /usr/local/android-sdk-linux/extras/android/m2repository
